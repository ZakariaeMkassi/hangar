trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
- group: AWS_Credentials
- name: terraformWorkingDirectory
  value: '$(System.DefaultWorkingDirectory)/.pipelines/scripts/terraform/aws/eks'
  
steps:
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      aws configure set aws_access_key_id $(ACCESS_KEY)
      aws configure set aws_secret_access_key $(SECRET_KEY)
      aws eks update-kubeconfig --name $(clustername) --region $(REGION)
      helm list --all-namespaces
      helm ls -a --all-namespaces | awk 'NR > 1 { print  "-n "$2, $1}' | xargs -L1 helm delete
      echo 'LIST OF RELEASES AFTER HELM UNINSTALL..'
      helm list --all-namespaces

- task: TerraformInstaller@0
  displayName: 'Install Terraform latest'
  inputs:
    terraformVersion: 'latest' 

- task: TerraformTaskV2@2
  displayName: 'Terraform : init'
  inputs:
    provider: 'aws'
    command: 'init'
    workingDirectory: '$(terraformWorkingDirectory)'
    commandOptions: '-var region=$(region) -var cluster_name=$(clustername)'    
    backendServiceAWS: '$(awsServiceConnection)'
    backendAWSBucketName: '$(awsS3BucketName)'
    backendAWSKey: '$(awsS3KeyPath)'

- task: TerraformTaskV2@2
  displayName: 'Terraform : plan'
  inputs:
    provider: 'aws'
    command: 'plan'
    workingDirectory: '$(terraformWorkingDirectory)'
    commandOptions: '-destroy -var region=$(region) -var cluster_name=$(clustername)'
    environmentServiceNameAWS: '$(awsServiceConnection)'

- task: TerraformTaskV2@2
  displayName: 'Terraform : apply'
  inputs:
    provider: aws
    command: apply
    workingDirectory: '$(terraformWorkingDirectory)'
    commandOptions: '-destroy -var region=$(region) -var cluster_name=$(clustername)'
    environmentServiceNameAWS: '$(awsServiceConnection)'